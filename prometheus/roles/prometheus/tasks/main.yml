- name: Download prometheus
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
    dest: /opt
    remote_src: true

- name: COpy Prometheus service file
  ansible.builtin.template:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service

- name: Copy Prometheus Server configuration
  ansible.builtin.template:
    src: prometheus.yml
    dest: /opt/prometheus-{{ prometheus_version }}.linux-amd64/prometheus.yml

- name: Copy Prometheus Alerts configuration
  ansible.builtin.template:
    src: alerts.yml
    dest: /opt/prometheus-{{ prometheus_version }}.linux-amd64/alerts.yml

- name: Start prometheus service
  ansible.builtin.systemd:
    name: prometheus
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Wait for port Prometheus Port
  ansible.builtin.shell: sleep 5 ; netstat -lntp | grep 9090

- name: Check grafana service
  ansible.builtin.systemd_service:
    name: grafana-server
    state: restarted
  register: out
  ignore_errors: true

- name: msg
  debug:
    msg: "{{out }}"

- name: Install Grafana
  ansible.builtin.dnf:
    name: https://dl.grafana.com/enterprise/release/grafana-enterprise-10.3.1-1.x86_64.rpm
    state: installed
  when: out.status.ActiveState != "active"

- name: Start Grafana service
  ansible.builtin.systemd_service:
    name: grafana-server
    state: restarted
    enabled: yes
  when: out.status.ActiveState != "active"

- name: COpy file
  ansible.builtin.copy:
    src: grafana-expense.json
    dest: /tmp/grafana-expense.json

- name: Import Grafana dashboard
  community.grafana.grafana_dashboard:
    grafana_url: http://172.31.39.45:3000
    grafana_api_key: glsa_kNF8KxQYCzi9G53pNnaWt7TgfmvS4ixQ_95844bda
    state: present
    commit_message: Updated by ansible
    overwrite: true
    path: /tmp/grafana-expense.json

- name: Download Alert Manager
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/alertmanager/releases/download/v{{ alertmanager_version }}/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz
    dest: /opt
    remote_src: true

- name: COpy AlertManager service file
  ansible.builtin.template:
    src: alertmanager.service
    dest: /etc/systemd/system/alertmanager.service

- name: Copy Alertmanager Server configuration
  ansible.builtin.template:
    src: alertmanager.yml
    dest: /opt/alertmanager-{{ alertmanager_version }}.linux-amd64/alertmanager.yml

- name: Start AlertManager service
  ansible.builtin.systemd:
    name: alertmanager
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Wait for port AlertManager Port
  ansible.builtin.shell: sleep 5 ; netstat -lntp | grep 9093

